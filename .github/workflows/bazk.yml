name: "Bazk Build"

on:
  workflow_dispatch:

jobs:
  build-app:
    runs-on: ubuntu-20.04
    env:
      ACCOUNT_MNEMONIC: ${{ secrets.ACCOUNT_MNEMONIC }}
      PINATA_API_KEY: ${{ secrets.PINATA_API_KEY }}
      PINATA_API_SECRET: ${{ secrets.PINATA_API_SECRET }}
      SGX_ENABLED: ${{ secrets.SGX_ENABLED }}
      IAS_SPID: ${{ secrets.IAS_SPID }}
      IAS_API_KEY: ${{ secrets.IAS_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install build-essential, curl, git, wget, and docker
        run: |
          apt-get update
          apt-get install -y build-essential curl git wget
          apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
          curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
          add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
          apt-get update
          apt-get install -y docker-ce docker-ce-cli containerd.io
          echo "Installed build-essential, curl, git, wget, and docker"

      - name: Setup Rust and Cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.51.0
          override: true
          components: rustc, cargo

      - name: Use Node.js 18
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "yarn"

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: Install dependencies
        run: yarn install

      - name: Build app
        run: yarn gramine build-app-dist

      - name: Build manifest
        run: yarn gramine build-manifest

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-dist
          path: ./packages/gramine/dist
